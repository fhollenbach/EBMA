* using log directory ‘/Users/florianhollenbach/Documents/GitHub/EBMA/EBMAforecast.Rcheck’
* using R version 3.6.1 (2019-07-05)
* using platform: x86_64-apple-darwin18.6.0 (64-bit)
* using session charset: UTF-8
* using options ‘--no-manual --as-cran’
* checking for file ‘EBMAforecast/DESCRIPTION’ ... OK
* checking extension type ... Package
* this is package ‘EBMAforecast’ version ‘1.1.0’
* package encoding: UTF-8
* checking package namespace information ... OK
* checking package dependencies ... OK
* checking if this is a source package ... OK
* checking if there is a namespace ... OK
* checking for executable files ... OK
* checking for hidden files and directories ... OK
* checking for portable file names ... OK
* checking for sufficient/correct file permissions ... OK
* checking serialization versions ... OK
* checking whether package ‘EBMAforecast’ can be installed ... OK
* checking installed package size ... OK
* checking package directory ... OK
* checking for future file timestamps ... OK
* checking DESCRIPTION meta-information ... OK
* checking top-level files ... OK
* checking for left-over files ... OK
* checking index information ... WARNING
Empty or missing file ‘demo/00Index’.
See sections ‘The INDEX file’ and ‘Package subdirectories’ in the
‘Writing R Extensions’ manual.
* checking package subdirectories ... OK
* checking R files for non-ASCII characters ... OK
* checking R files for syntax errors ... OK
* checking whether the package can be loaded ... OK
* checking whether the package can be loaded with stated dependencies ... OK
* checking whether the package can be unloaded cleanly ... OK
* checking whether the namespace can be loaded with stated dependencies ... OK
* checking whether the namespace can be unloaded cleanly ... OK
* checking loading without being on the library search path ... OK
* checking dependencies in R code ... OK
* checking S3 generic/method consistency ... OK
* checking replacement functions ... OK
* checking foreign function calls ... OK
* checking R code for possible problems ... NOTE
prediction,FDatFitLogit: no visible binding for global variable
  ‘predType’
prediction,FDatFitLogit: no visible binding for global variable
  ‘.forecastData’
prediction,FDatFitNormal: no visible binding for global variable
  ‘.forecastData’
Undefined global functions or variables:
  .forecastData predType
* checking Rd files ... OK
* checking Rd metadata ... OK
* checking Rd line widths ... OK
* checking Rd cross-references ... OK
* checking for missing documentation entries ... WARNING
Undocumented data sets:
  ‘calibrationSample’ ‘testLogit’ ‘testNorm’ ‘testSample’
Undocumented S4 classes:
  ‘CompareModels’ ‘SummaryForecastData’
Undocumented S4 methods:
  generic 'EBMApredict' and siglist 'ForecastData'
  generic 'calibrateEnsemble' and siglist 'ForecastData'
  generic 'compareModels' and siglist 'ForecastData'
  generic 'makeForecastData' and siglist 'ANY'
  generic 'setModelNames<-' and siglist 'ForecastData'
  generic 'setOutcomeCalibration<-' and siglist 'ForecastData'
  generic 'setOutcomeTest<-' and siglist 'ForecastData'
  generic 'setPredCalibration<-' and siglist 'ForecastData'
  generic 'setPredTest<-' and siglist 'ForecastData'
All user-level objects in a package (including S4 classes and methods)
should have documentation entries.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking for code/documentation mismatches ... OK
* checking Rd \usage sections ... WARNING
Undocumented arguments in documentation object 'print,SummaryForecastData-method'
  ‘...’

Undocumented arguments in documentation object 'calibrateEnsemble'
  ‘...’
Documented arguments not in \usage in documentation object 'calibrateEnsemble':
  ‘predType’ ‘W’ ‘const’ ‘iterations’ ‘burns’ ‘thinning’
  ‘useModelParams’

Undocumented arguments in documentation object 'setPredCalibration<-'
  ‘object’ ‘value’

Functions with \usage entries need to have the appropriate \alias
entries, and all their arguments documented.
The \usage entries must correspond to syntactically valid R code.
See chapter ‘Writing R documentation files’ in the ‘Writing R
Extensions’ manual.
* checking Rd contents ... OK
* checking for unstated dependencies in examples ... OK
* checking contents of ‘data’ directory ... OK
* checking data for non-ASCII characters ... OK
* checking data for ASCII and uncompressed saves ... OK
* checking line endings in C/C++/Fortran sources/headers ... OK
* checking pragmas in C/C++ headers and code ... OK
* checking compilation flags used ... OK
* checking compiled code ... OK
* checking examples ... OK
* DONE
Status: 3 WARNINGs, 1 NOTE
